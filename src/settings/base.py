"""
Django settings for lbseven project.

Generated by 'django-admin startproject' using Django 4.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
SITE_DIR = os.path.dirname(BASE_DIR)
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-)cz8(2$w!*)ce%l!0t-e(0ov^r_8@=etkc@%v$20sw-f+o8w5o'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

LOGS_DIR = os.path.join(SITE_DIR, "logs")
os.makedirs(LOGS_DIR, exist_ok=True)
LOGS_FILE_DEFAULT = os.path.join(LOGS_DIR, "root.log")
LOGS_FILE_APP = os.path.join(LOGS_DIR, "apps.log")
LOGS_FILE_COMMAND = os.path.join(LOGS_DIR, "command.log")
LOGS_FILE_PURCHASE = os.path.join(LOGS_DIR, "purchase.log")
LOGS_FILE_DOWNLOAD_INFO = os.path.join(LOGS_DIR, "download_info.log")
BYTES_SIZE_100M = 100 * 1024 * 1024
LOG_BACKUP_CNT = 10

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'common': {
            'format': u'%(asctime)s|pid=%(process)d|thid=%(thread)d|%(levelname)s|%(name)s:%(lineno)s|%(message)s'
        },
        'simple': {
            'format': u'%(asctime)s|%(message)s'
        },
        'dev_action': {
            'format': u'%(asctime)s|%(levelname)s|%(name)s:%(lineno)s|%(message)s'
        },
        '_json': {
            'format': u'%(asctime)s|%(message)s'
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'common'
        },
        'error_report': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'email_backend': 'django.core.mail.backends.smtp.EmailBackend',
        },
        'default_file': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': LOGS_FILE_DEFAULT,
            'formatter': 'common',
            'maxBytes': BYTES_SIZE_100M,
            'backupCount': LOG_BACKUP_CNT,
        },
        'apps': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': LOGS_FILE_APP,
            'formatter': '_json',
            'maxBytes': BYTES_SIZE_100M,
            'backupCount': 2,
        },
        'command': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': LOGS_FILE_COMMAND,
            'formatter': 'simple',
            'maxBytes': BYTES_SIZE_100M,
            'backupCount': 2,
        },
        "download_info": {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': LOGS_FILE_DOWNLOAD_INFO,
            'formatter': 'simple',
            'maxBytes': BYTES_SIZE_100M,
            'backupCount': 10,
        },

    },
    'loggers': {
        'download_info': {
            'handlers': ['download_info'],
            'level': 'DEBUG',
            'propagate': True
        },

    },
}

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'xadmin',
    'crispy_forms',
    'apps.metrics',
    'apps.servers',
    'apps.alerts'
]

MIDDLEWARE = [
    # 'apps.common.replace_middleware.EncryptMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    # 'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'settings.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'settings.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

# 启用时区支持
USE_TZ = True

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.normpath(os.path.join(SITE_DIR, 'assets'))

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(STATIC_ROOT, "media")

REDIS_SERVER_IP = "localhost"
REDIS_SERVER_PORT = 6379
REDIS_DB_NO = 4
